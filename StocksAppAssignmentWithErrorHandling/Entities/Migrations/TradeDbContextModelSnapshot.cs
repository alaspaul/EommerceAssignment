// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entities.Migrations
{
    [DbContext(typeof(TradeDbContext))]
    partial class TradeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.BuyOrder", b =>
                {
                    b.Property<Guid>("BuyOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateAndTimeOfOrder")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint");

                    b.Property<string>("StockName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StockSymbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BuyOrderId");

                    b.ToTable("BuyOrders", (string)null);

                    b.HasData(
                        new
                        {
                            BuyOrderId = new Guid("2268d2c5-32eb-4517-91b3-a5e68ab86066"),
                            Price = 100.0,
                            Quantity = 100L,
                            StockName = "something100",
                            StockSymbol = "SMT100"
                        },
                        new
                        {
                            BuyOrderId = new Guid("8abdfb23-ec13-42b8-898b-198d071e8717"),
                            Price = 10.0,
                            Quantity = 10L,
                            StockName = "something10",
                            StockSymbol = "SMT10"
                        },
                        new
                        {
                            BuyOrderId = new Guid("d6b2539e-cc10-4172-9f39-91dc9585162a"),
                            Price = 1.0,
                            Quantity = 1L,
                            StockName = "something1",
                            StockSymbol = "SMT1"
                        });
                });

            modelBuilder.Entity("Entities.SellOrder", b =>
                {
                    b.Property<Guid>("SellOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateAndTimeOfOrder")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint");

                    b.Property<string>("StockName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StockSymbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SellOrderId");

                    b.ToTable("SellOrders", (string)null);

                    b.HasData(
                        new
                        {
                            SellOrderId = new Guid("1e4abde8-cddb-4bdf-b085-d9505e981618"),
                            Price = 100.0,
                            Quantity = 100L,
                            StockName = "something100",
                            StockSymbol = "SMT100"
                        },
                        new
                        {
                            SellOrderId = new Guid("0534c02e-7c96-4eff-b194-42dafa028b73"),
                            Price = 10.0,
                            Quantity = 10L,
                            StockName = "something10",
                            StockSymbol = "SMT10"
                        },
                        new
                        {
                            SellOrderId = new Guid("62c7e53a-6a1a-4c17-9e11-c56229948159"),
                            Price = 1.0,
                            Quantity = 1L,
                            StockName = "something1",
                            StockSymbol = "SMT1"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
